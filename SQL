MySQL
```````````````````````
Database
````````````````````
Used for data storage and data procressing

Types of database
RDBMS           NRDBMS

noSQL
`````````````````````````````
Non relational database

Mongodb
casssandra
hbase
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Structure of MySQL
```````````````````````````
1. Database
2. Tables
3. Insert values
................................

Instal MySQL in LINUX

1 sudo apt update
2 Enter passsword
3 sudo apt-get install mysql-server
4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SQL datatypes
int
bigint
float
double
char
varchar
date : yyyy-mm-dd   2024-12-05
datetime: yyyy-mm-dd hh-mm-ss

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
MY SQL COMMANDS
`````````````````````````````````````````````````````````````````````
CREATE DATABASE dbname;
show databases; ==> lists databases in SQL
drop database dbname; ==> drops a db from sql
use dbname; ==> to change or use database

create table tablename(schema);
Eg: CREATE TABLE employee(id int,fname varchar(20),lname varchar(10),age int);

DESCRIBE tablename; ==> shows the details of the table
------------------------------------------------------------------------------------------------------------
How to add new column to table?
ALTER TABLE table_name ADD column_name datatype;
To add at a certain location use AFTER
ALTER TABLE table_name ADD col_name datatype AFTER col_name;
To add at first location use first
ALTER TABLE tablename ADD col_name datatype first;
To add multiple columns together
ALTER TABLE tbname ADD (col_name dtype,col_name dtype);
To add Multiple columns at certian locations
ALTER TABLE table_name ADD col_name datatype AFTER col_name,ADD col_name datatype AFTER col_name;

How to Change datatype
ALTER TABLE tbname MODIFY col_name dtype;

DROP column
ALTER TABLE tbname DROP clname

DROP multiple columns
ALTER TABLE TableName DROP COLUMN Column1,DROP COLUMN Column2;

hOW TO CHANGE TABLE NAME
ALTER TABLE tbname RENAME newtbname;

HOW TO DROP A TABLE
DROP TABLE tbname;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
HOW TO INSERT VALUES TO MYSQL TABLES

mANUAL METHOD== INSERT INTO tbname (clname) VALUES (Values);

HOW TO UPDATE MYSQL VALUES
UPDATE tbname SET clname=new value WHERE condition;

TO see values inside tables
SELECT * from tbname        --> All values
SELECT clname FROM tbname   --> Specific values

How to collect rows
SELECT * FROM tbname limit(no of rows)


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CRUD OPERATIONS
Create
Read
Update
Delete
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
TO STORE RESULTS OF ANANLYSIS WE CAN CREATE A VIEW TABLE
create view tablename as query;

```````````````````````````````````````````
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
NORMAL OPERATORS
``````````````````````````````````````````
ORDER BY
To sort data in tables
asc/dsc
select * from tbname ORDER BY colname;      => asc
select * from tbname ORDER BY colname desc; => Desc

`````````````````````````````````````````````````````````````
DISTINCT
to remove duplicate rows
select distinct * from sample4;
______________________________________________________________
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
EVALUATING FUNCTIONS
`````````````````````````
COUNT
MAX
MIN
SUM
AVG
``````````````````````````````
COUNT()
select count(*) from sample4;                           ==> Gives the count of number of rows in the table
select colname,count(*) from tblname group by colname;  ==> Can also be used for each column wise count
``````````````````````````````
MAX()
used to find the maximum value of a item in a column
select colname,max(colname0) from tblname group by colname;
``````````````````````````````
MIN()
used to find the minimum value of a item in a column
select colname,min(colname0) from tblname group by colname;
`````````````````````````````````
SUM()
Used to calculate the total of a colum
select colname,sum(colname) from tblname group by colname;
`````````````````````````````````
AVG()
Used to calulate the average of a column
select colname,avg(colname) from tblname group by colname;

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
JOIN operation
To join two tables together with a common field to create a new table

TYPES OF JOIN
`````````````
Inner joining
Left outer joining
Right outer joining
Full outer joining
```````````````````
INNER JOINING
Joins tables with common fields and matching data to create a new table
SYNTAX => select a.colname,a.colname,b.colname,b.colname from tblname a join tblname b on(a.commonfeild=b.commoonfeild);
TABLE 1
id  fname   lnaame  age loc
1   anu     k       27  calicut
2   vipin   p       30  malapuram
3   arjun   k       28  ekrm
4   amal    r       30  thrissur

TABLE 2
prod    id  salary  gender
bigdata 3   3500    male
python  4   4500    male
testing 6   3000    male
testing 7   4500    female

3 arjun k 28 eklm bigdata 3500  male
4 amal  r 30 thrissur  python 4500 male
```````````````````````````````````````````
LEFT OUTER JOINING
It returns all the row from the left table plus matched value from right table or null
incase of no matching values

SYNTAX =>  select a.colname,a.colname,b.colname,b.colname from tblname a left outer join tblname b on(a.commonfeild=b.commoonfeild);
`````````````````````````````````````````````
RIGHT OUTER JOIN
It returns all the row from the right table plus matched value from left table or null
incase of no matching values

SYNTAX =>  select a.colname,a.colname,b.colname,b.colname from tblname a right outer join tblname b on(a.commonfeild=b.commoonfeild);
``````````````````````````````````````````````
FULL OUTER JOIN
It is a result of the combination of left outer join and right outer join.
SYNTAX =>
select a.colname,a.colname,b.colname,b.colname from tblname a left outer join tblname b on(a.commonfeild=b.commoonfeild)
UNION
select a.colname,a.colname,b.colname,b.colname from tblname a right outer join tblname b on(a.commonfeild=b.commoonfeild);
`````````````````````````````````````````````````
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+----------------------------------------------------------------------------------------------+
|   HEIRARCHY                                                                                  |
|   SELECT join==> colname count,max,min,sum,avg from tblname where group by order by limit;   |
+----------------------------------------------------------------------------------------------+

